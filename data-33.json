[[{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-2","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-3","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-4","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-5","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-6","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-7","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-8","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-9","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false}],"id":"the-app-should-greet-the-user-upon-startup","line":1,"keyword":"Feature 6","name":"The app should greet the user upon startup","tags":[],"uri":"features\\feature1.feature","stats":{"passed":10,"failed":0,"skipped":0},"failed":false},{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-2","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-3","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-4","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-5","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-6","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-7","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-8","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-9","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false}],"id":"the-app-should-greet-the-user-upon-startup","line":1,"keyword":"Feature 7","name":"The app should greet the user upon startup","tags":[],"uri":"features\\feature1.feature","stats":{"passed":10,"failed":0,"skipped":0},"failed":false},{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-2","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-3","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-4","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-5","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-6","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-7","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-8","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-9","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false}],"id":"the-app-should-greet-the-user-upon-startup","line":1,"keyword":"Feature 8","name":"The app should greet the user upon startup","tags":[],"uri":"features\\feature1.feature","stats":{"passed":10,"failed":0,"skipped":0},"failed":false},{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-2","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-3","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-4","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-5","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-6","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-7","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-8","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-9","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false}],"id":"the-app-should-greet-the-user-upon-startup","line":1,"keyword":"Feature 9","name":"The app should greet the user upon startup","tags":[],"uri":"features\\feature1.feature","stats":{"passed":10,"failed":0,"skipped":0},"failed":false},{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-2","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-3","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-4","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-5","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-6","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-7","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-8","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app-9","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false}],"id":"the-app-should-greet-the-user-upon-startup","line":1,"keyword":"Feature 10","name":"The app should greet the user upon startup","tags":[],"uri":"features\\feature1.feature","stats":{"passed":10,"failed":0,"skipped":0},"failed":false},{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"the-app-should-greet-the-user-upon-startup;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[]},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false}],"id":"the-app-should-greet-the-user-upon-startup","line":1,"keyword":"Feature","name":"The app should greet the user upon startup","tags":[],"uri":"features\\feature1.feature","stats":{"passed":10,"failed":0,"skipped":0},"failed":false},{"description":"    This scenario is born to fail","elements":[{"description":"","id":"this-will-utterly-fail;eating-grape","keyword":"Scenario","line":7,"name":"Eating grape","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":8,"name":"I have some grapes","match":{"location":"features\\steps\\feature2.js:3"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":9,"name":"I eat 3 grapes","match":{"location":"features\\steps\\feature2.js:8"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":10,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":true},{"description":"","id":"this-will-utterly-fail;not-eating-grape","keyword":"Scenario","line":13,"name":"Not eating grape","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":14,"name":"I have some grapes","match":{"location":"features\\steps\\feature2.js:3"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":15,"name":"I eat 3 grapes","match":{"location":"features\\steps\\feature2.js:8"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":16,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[{"name":"@wip","line":12}],"type":"scenario","failed":true},{"description":"","id":"this-will-utterly-fail;eating-grapes","keyword":"Scenario Outline","line":25,"name":"Eating grapes","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":19,"name":"I have some grapes","match":{"location":"features\\steps\\feature2.js:3"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":20,"name":"I eat 1 grapes","match":{"location":"features\\steps\\feature2.js:8"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":21,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":true},{"description":"","id":"this-will-utterly-fail;eating-grapes","keyword":"Scenario Outline","line":26,"name":"Eating grapes","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"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","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":19,"name":"I have some grapes","match":{"location":"features\\steps\\feature2.js:3"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":20,"name":"I eat 2 grapes","match":{"location":"features\\steps\\feature2.js:8"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":21,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":true},{"description":"","id":"this-will-utterly-fail;eating-grapes","keyword":"Scenario Outline","line":27,"name":"Eating grapes","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Given ","line":19,"name":"I have some grapes","match":{"location":"features\\steps\\feature2.js:3"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":20,"name":"I eat 3 grapes","match":{"location":"features\\steps\\feature2.js:8"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":21,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":true}],"id":"this-will-utterly-fail","line":1,"keyword":"Feature","name":"This will utterly fail","tags":[],"uri":"features\\feature2.feature","stats":{"passed":20,"failed":5,"skipped":0},"failed":true},{"description":"    When the application is first loaded, the user should be presented with a greeting","elements":[{"description":"","id":"extra-stuff;the-user-launches-the-app","keyword":"Scenario","line":4,"name":"The user launches the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":5,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":6,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":7,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"extra-stuff;the-user-restarts-the-app","keyword":"Scenario","line":9,"name":"The user restarts the app","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":10,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":11,"name":"the app is loaded","match":{"location":"features\\steps\\feature1.js:9"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":12,"name":"the user has requested a restart","match":{"location":"features\\steps\\feature1.js:26"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":13,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":14,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":15,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":true},{"description":"","id":"extra-stuff;screenshot","keyword":"Scenario","line":18,"name":"Screenshot","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/jpeg","isPng":false,"isJpeg":true,"isText":false}]},{"arguments":[],"keyword":"Given ","line":19,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":20,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":21,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"keyword":"After","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"U29tZSBpbmZvLg==","mime_type":"text/plain","isPng":false,"isJpeg":false,"isText":true},{"data":"eyJzb21lIjogIkpTT04ifX0=","mime_type":"application/json","isPng":false,"isJpeg":false,"isText":true}]}],"tags":[{"name":"@Screenshot","line":17}],"type":"scenario","failed":false},{"description":"","id":"extra-stuff;another-screenshot","keyword":"Scenario","line":24,"name":"Another Screenshot","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":25,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":26,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":27,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":28,"name":"this app will fail","match":{"location":"features\\steps\\feature2.js:16"},"result":{"status":"failed","duration":"0s","error_message":"Error: fail\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature2.js:18:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"keyword":"After","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]}],"tags":[{"name":"@Fail","line":23}],"type":"scenario","failed":true},{"description":"","id":"extra-stuff;a-table","keyword":"Scenario","line":30,"name":"A table","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":31,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":32,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":33,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[{"rows":[{"cells":["a","b","c"]},{"cells":["1","2","3"]},{"cells":["4","5","6"]},{"cells":["7","8","9"]}]}],"keyword":"And ","line":34,"name":"I will have a table like this:","match":{"location":"features\\steps\\feature3.js:19"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":false},{"description":"","id":"extra-stuff;super-long-stack-trace","keyword":"Scenario","line":40,"name":"Super long stack trace","steps":[{"keyword":"Before","hidden":true,"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false},"embeddings":[{"data":"","mime_type":"image/png","isPng":true,"isJpeg":false,"isText":false}]},{"arguments":[],"keyword":"Given ","line":41,"name":"the app is started","match":{"location":"features\\steps\\feature1.js:4"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"When ","line":42,"name":"the app loads","match":{"location":"features\\steps\\feature1.js:14"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"Then ","line":43,"name":"the user should see a greeting","match":{"location":"features\\steps\\feature1.js:21"},"result":{"status":"passed","duration":"0s","failed":false,"passed":true,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}},{"arguments":[],"keyword":"And ","line":44,"name":"I will throw the longest ever stack trace","match":{"location":"features\\steps\\feature3.js:23"},"result":{"status":"failed","duration":"0s","error_message":"Error: \n        Exception in thread \"AWT-EventQueue-0\" java.lang.StackOverflowError\n\tat java.util.IdentityHashMap.get(IdentityHashMap.java:331)\n\tat javax.swing.RepaintManager.extendDirtyRegion(RepaintManager.java:576)\n\tat javax.swing.RepaintManager.addDirtyRegion0(RepaintManager.java:404)\n\tat javax.swing.RepaintManager.addDirtyRegion(RepaintManager.java:468)\n\tat javax.swing.JComponent.repaint(JComponent.java:4736)\n\tat java.awt.Component.repaint(Component.java:3117)\n\tat javax.swing.text.DefaultCaret.repaint(DefaultCaret.java:245)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1261)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat java.util.IdentityHashMap.get(IdentityHashMap.java:331)\n\tat javax.swing.RepaintManager.extendDirtyRegion(RepaintManager.java:576)\n\tat javax.swing.RepaintManager.addDirtyRegion0(RepaintManager.java:404)\n\tat javax.swing.RepaintManager.addDirtyRegion(RepaintManager.java:468)\n\tat javax.swing.JComponent.repaint(JComponent.java:4736)\n\tat java.awt.Component.repaint(Component.java:3117)\n\tat javax.swing.text.DefaultCaret.repaint(DefaultCaret.java:245)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1261)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n\tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)\n\tat llama.repl$repl_key_listener$update_caret_BANG___4893.invoke(repl.clj:55)\n\tat llama.repl$repl_key_listener$reify__4895.caretUpdate(repl.clj:58)\n\tat javax.swing.text.JTextComponent.fireCaretUpdate(JTextComponent.java:405)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.fire(JTextComponent.java:4401)\n\tat javax.swing.text.JTextComponent$MutableCaretEvent.stateChanged(JTextComponent.java:4423)\n\tat javax.swing.text.DefaultCaret.fireStateChanged(DefaultCaret.java:799)\n\tat javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1274)\n\tat javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1170)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1151)\n\tat javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1048)\n\tat javax.swing.text.JTextComponent.setCaretPosition(JTextComponent.java:1666)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:616)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:90)\n    at World.<anonymous> (C:\\Users\\marut\\Documents\\Projects\\test-cucumber\\features\\steps\\feature3.js:24:11)","failed":true,"passed":false,"skipped":false,"undefined":false,"pending":false,"ambiguous":false}}],"tags":[],"type":"scenario","failed":true}],"id":"extra-stuff","line":1,"keyword":"Feature","name":"Extra stuff","tags":[],"uri":"features\\feature3.feature","stats":{"passed":30,"failed":3,"skipped":0},"failed":true}]]